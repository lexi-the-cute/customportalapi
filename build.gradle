plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
	maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
	maven { url = "https://maven.tterrag.com/" } // Flywheel
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://api.modrinth.com/maven" } // LazyDFU
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	//mappings minecraft.officialMojangMappings()
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	optionalDependency("maven.modrinth:sodium:mc1.20-0.4.10")
	optionalDependency("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")
}

def optionalDependency(String dep) {
	def exclude = {
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "net.fabricmc"
	}

	dependencies.modCompileOnly(dep, exclude)
	//dependencies.modRuntimeOnly(dep, exclude)
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId archivesBaseName
			from components.java
		}
	}
	repositories {
		maven {
			url ='s3://maven.kyrptonaught.dev'
			credentials(AwsCredentials) {
				accessKey = System.getenv('maven-key-id')
				secretKey = System.getenv('maven-key')
			}
		}
	}
}
